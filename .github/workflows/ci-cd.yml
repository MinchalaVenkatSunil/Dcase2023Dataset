# TODO:
# 1. Dynamic pipeline or docker image creation versioning
# 2. Block docker image creation for non-related changes. 
# 3. Extend a base YAML template and overide the parameters as necessary. Move the common tasks to the template. 
# 4. Trigger the deployment changes in the template dynamically based on branch changes

# TODO:
# 1. Dynamic pipeline or docker image creation versioning
# 2. Block docker image creation for non-related changes. 
# 3. Extend a base YAML template and overide the parameters as necessary. Move the common tasks to the template. 
# 4. Trigger the deployment changes in the template dynamically based on branch changes

name: CI/CD Pipeline

on:
  push:
    branches:
     - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Build and push Docker images
      run: |

        #echo "IMAGE_VERSION=$(git rev-parse --short HEAD)-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV



        # Define the static version number
        VERSION=1.0.1

        # Generate the dynamic suffix using the current date and time
        SUFFIX=$(git rev-list --count HEAD) - $(date +%Y%m%d%H%M%S)
        
        docker build -t ml-data-collection-service:${VERSION}-${SUFFIX} --label "Simulates weekly sensor data collection and uploads to Google Cloud." -f DatacollectionDockerFile .
        docker build -t ml-data-transfer-service:${VERSION}-${SUFFIX} --label "Transfers local data to Google Cloud Storage on a simulated weekly basis." -f DataTransferDockerFile .
        docker build -t ml-model-training-service:${VERSION}-${SUFFIX} --label "Configures and runs model training on Google Cloud using uploaded data." -f ModelTrainingDockerFile .
        docker build -t ml-inference-service:${VERSION}-${SUFFIX} --label "Evaluate and update the model for local inference if it performs better." -f ModelEvaluationandUpdateDockerFile .

        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

        docker tag ml-data-collection-service:${VERSION}-${SUFFIX} ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION}-${SUFFIX}
        docker tag ml-data-transfer-service:${VERSION}-${SUFFIX} ${{ secrets.DOCKER_USERNAME }}/ml-data-transfer-service:${VERSION}-${SUFFIX}
        docker tag ml-model-training-service:${VERSION}-${SUFFIX} ${{ secrets.DOCKER_USERNAME }}/ml-model-training-service:${VERSION}-${SUFFIX}
        docker tag ml-inference-service:${VERSION}-${SUFFIX} ${{ secrets.DOCKER_USERNAME }}/ml-inference-service:${VERSION}-${SUFFIX}

        docker push ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION}-${SUFFIX}
        docker push ${{ secrets.DOCKER_USERNAME }}/ml-data-transfer-service:${VERSION}-${SUFFIX}
        docker push ${{ secrets.DOCKER_USERNAME }}/ml-model-training-service:${VERSION}-${SUFFIX}
        docker push ${{ secrets.DOCKER_USERNAME }}/ml-inference-service:${VERSION}-${SUFFIX}

    #- name: Remove Docker Images
     # run: |   
      # echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
       
       # docker rmi venkatsunilm/data_collection_simulation:latest
        #docker rmi venkatsunilm/data_transfer_to_gcs:latest
        #docker rmi venkatsunilm/model_training_on_gcp:latest
