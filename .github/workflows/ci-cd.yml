name: CI/CD Pipeline

on:
  push:
    branches:
     - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Set Version
      run: |
           echo "IMAGE_VERSION=datetime.datetime.now().strftime("%S")"
           
    - name: Build and Push Docker Images
      env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKENS }}
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}
      run: |
          docker build -t ml-data-collection-service:${IMAGE_VERSION} --label "Simulates weekly sensor data collection and uploads to Google Cloud." -f DatacollectionDockerFile .
          docker build -t ml-data-transfer-service:${IMAGE_VERSION} --label "Transfers local data to Google Cloud Storage on a simulated weekly basis." -f DataTransferDockerFile .
          docker build -t ml-model-training-service:${IMAGE_VERSION} --label "Configures and runs model training on Google Cloud using uploaded data." -f ModelTrainingDockerFile .
          docker build -t ml-inference-service:${IMAGE_VERSION} --label "Evaluate and update the model for local inference if it performs better." -f ModelEvaluationandUpdateDockerFile .
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker tag ml-data-collection-service:latest $DOCKER_USERNAME/ml-data-collection-service:${IMAGE_VERSION}
          docker tag ml-data-transfer-service:latest $DOCKER_USERNAME/ml-data-transfer-service:${IMAGE_VERSION}
          docker tag ml-model-training-service:latest $DOCKER_USERNAME/ml-model-training-service:${IMAGE_VERSION}
          docker tag ml-inference-service:latest $DOCKER_USERNAME/ml-inference-service:${IMAGE_VERSION}
          docker push $DOCKER_USERNAME/ml-data-collection-service:${IMAGE_VERSION}
          docker push $DOCKER_USERNAME/ml-data-transfer-service:${IMAGE_VERSION}
          docker push $DOCKER_USERNAME/ml-model-training-service:${IMAGE_VERSION}
          docker push $DOCKER_USERNAME/ml-inference-service:${IMAGE_VERSION}
