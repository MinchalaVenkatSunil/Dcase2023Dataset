# TODO:
# 1. Dynamic pipeline or docker image creation versioning
# 2. Block docker image creation for non-related changes. 
# 3. Extend a base YAML template and overide the parameters as necessary. Move the common tasks to the template. 
# 4. Trigger the deployment changes in the template dynamically based on branch changes

name: CI/CD Pipeline

on:
  push:
    branches:
     - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Build and push Docker images
      run: |
        
        VERSION=1.0.1
        SUFFIX=$(date +%Y%m%d%m%s)-$(printf "%04d" $BUILD_NUMBER)

        BUILD_NUMBER=$GITHUB_RUN_NUMBER
        COMMIT_HASH=$(git rev-parse HEAD)

        echo "Hello World!"
        echo "Commit hash is : $COMMIT_HASH"
        echo "Build number is: $BUILD_NUMBER"
        echo "GITHUB_ENV is: $GITHUB_ENV"
        echo ">> value is: $COMMIT_HASH >> $GITHUB_ENV"

        echo "BUILD_NUMBER is: $BUILD_NUMBER" >> $GITHUB_ENV
        echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

        # docker build -t ml-data-collection-service:${VERSION}-${SUFFIX} --label "Simulates weekly sensor data collection and uploads to Google Cloud." -f DatacollectionDockerFile .
      
        # docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKENS }}

        # docker tag ml-data-collection-service:${VERSION}-${SUFFIX} ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION}-${SUFFIX}

        # docker push ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION}-${SUFFIX}
