# TODO:
# 1. Dynamic pipeline or docker image creation versioning
# 2. Block docker image creation for non-related changes.
# 3. Extend a base YAML template and override the parameters as necessary. Move the common tasks to the template.
# 4. Trigger the deployment changes in the template dynamically based on branch changes

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature
      - staging
      - release
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build and push Docker images
        run: |
          # Define versioning variables using Git tags
          VERSION=$(git describe --abbrev=0 --tags)
          TAG_COMMIT_HASH=$(git rev-list -n 1 $VERSION)

          # Ensure the version is a semantic version
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            VERSION_TAG=$VERSION-$TAG_COMMIT_HASH
          else
            echo "Error: Git tag is not a semantic version."
            exit 1
          fi

          if [ "$GITHUB_EVENT_NAME" == "push" ]; then
            # Only build and push Docker image for pushes to the main branch
            docker build -t ml-data-collection-service:${VERSION_TAG} --label "Simulates weekly sensor data collection and uploads to Google Cloud." -f DatacollectionDockerFile .

            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKENS }}

            docker tag ml-data-collection-service:${VERSION_TAG} ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG}

            docker push ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG}
          else
            echo "Skipping Docker image build for non-push events."
          fi
