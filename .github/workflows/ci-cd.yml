# TODO:
# 1. Extend a base YAML template and override the parameters as necessary. Move the common tasks to the template.
# 2. Trigger the deployment changes in the template dynamically based on branch and specific path changes.
# 3. Use serverless functions to trigger a weekly schedule for data transfers.
#    - In Azure, we use Azure functions along with logic apps. Explore equivalent options in GCP.

name: CI/CD Pipeline

on:
  schedule:
    - cron: '30 5 * * 1' # Monday
    - cron: '30 6 * * 1' # Monday after 1
    # The below are for testing
    # - cron: '50 11 * * *'
    # - cron: '55 11 * * *'

  push:
    branches:
      - main
      - master
      - auth_changes
      - data_collection_transfer

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: mldocker
      WORKLOAD_IDENTITY_POOL_NAME: mldocker pool
      WORKLOAD_IDENTITY_POOL_ID: mldocker-pool
      WORKLOAD_IDENTITY_PROVIDER_ID: mldocker-provider
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}"

    steps:

      - name: Print Environment Variables
        run: |
          echo "GOOGLE_APPLICATION_CREDENTIALS: $GOOGLE_APPLICATION_CREDENTIALS"
          echo "GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}"
  
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install -r requirements.txt

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          # "https://iam.googleapis.com/projects/763509664602/locations/global/workloadIdentityPools/mldocker-pool/providers/mldocker-provider"
          workload_identity_provider: 'projects/763509664602/locations/global/workloadIdentityPools/mldocker-pool/providers/mldocker-provider'
          service_account: 'cloud-run-function-service@mldocker.iam.gserviceaccount.com'

      # - id: auth
      #   name: Authenticate to Google Cloud
      #   uses: google-github-actions/auth@v0.4.0
      #   with:
      #     credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKENS }}

      # - name: workload identity pool
      #   run: |
          # echo "WORKLOAD_IDENTITY_POOL_NAME: $WORKLOAD_IDENTITY_POOL_NAME"
          # echo "WORKLOAD_IDENTITY_POOL_NAME: ${WORKLOAD_IDENTITY_POOL_NAME}"
          # gcloud iam workload-identity-pools create ${WORKLOAD_IDENTITY_POOL_ID} \
          # --project=${PROJECT_ID} \
          # --location="global" \
          # --display-name=${WORKLOAD_IDENTITY_POOL_NAME}

          # gcloud iam workload-identity-pools providers create-oidc "my-provider" \
          # --project="${PROJECT_ID}" \
          # --location="global" \
          # --workload-identity-pool="my-pool" \
          # --display-name="Demo provider" \
          # --attribute-mapping="google.subject=assertion.sub,attribute.actor=assertion.actor,attribute.aud=assertion.aud" \
          # --issuer-uri="https://token.actions.githubusercontent.com"
          
      - name: Build and push Docker images
        run: |
          # TODO: Move to env variables
          VERSION=1.0.1
          BUILD_NUMBER=$GITHUB_RUN_NUMBER
          VERSION_TAG="$VERSION-$BUILD_NUMBER"

          # Build and push Docker image for data collection
          docker build -t ml-data-collection-service:${VERSION_TAG} \
            --label "Simulates weekly sensor data collection and uploads to Google Cloud." \
            -f dockerfiles/DatacollectionDockerFile .

          docker tag ml-data-collection-service:${VERSION_TAG} \
            ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG}

          docker push ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG}

          # Build and push Docker image for data transfer
          docker build -t ml-data-transfer-service:${VERSION_TAG} \
            --label "Transfers locally simulated data to Google Cloud Storage." \
            -f dockerfiles/DataTransferDockerFile .

          docker tag ml-data-transfer-service:${VERSION_TAG} \
            ${{ secrets.DOCKER_USERNAME }}/ml-data-transfer-service:${VERSION_TAG}

          docker push ${{ secrets.DOCKER_USERNAME }}/ml-data-transfer-service:${VERSION_TAG}

  data_collection:
    runs-on: ubuntu-latest
  
    needs: build
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKENS }}
  
      - name: Run Docker container for data collection
        # if: github.event.schedule == '30 5 * * 1'
        run: |
          VERSION=1.0.1
          BUILD_NUMBER=$GITHUB_RUN_NUMBER
          VERSION_TAG="$VERSION-$BUILD_NUMBER"

          docker run -d --name ml-data-collection \
            -v ml-data-collection-data:/app/result \
            -e GOOGLE_APPLICATION_CREDENTIALS="${GOOGLE_APPLICATION_CREDENTIALS}" \
            ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG} || true

  data_transfer:
    runs-on: ubuntu-latest

    needs: data_collection

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKENS }}

      - name: Run Docker container for data transfer
        # if: github.event.schedule == '30 6 * * 1'
        run: |
          VERSION=1.0.1
          BUILD_NUMBER=$GITHUB_RUN_NUMBER
          VERSION_TAG="$VERSION-$BUILD_NUMBER"

          docker run -d --name ml-data-transfer \
            -v ml-data-collection-data:/app/result \
            ${{ secrets.DOCKER_USERNAME }}/ml-data-transfer-service:${VERSION_TAG} || true
      